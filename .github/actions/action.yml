# action.yml
name: "Build OGC Application Package"
description: "A GitHub Action to build an OGC Application Package"
inputs:
  algorithm-config-path:
    description: "Path to the algorithm configuration file"
    required: true
  github-token:
    description: "GitHub token for authentication"
    required: true

runs:
  using: "composite"
  steps:
    - name: Checkout repo content
      uses: actions/checkout@v4

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.9

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install PyYAML ruamel.yaml
        pip list
      shell: bash

    - name: Generate build config for algorithm
      run: python3 ${{ github.action_path }}/generate_build_config.py nasa/algorithm_config.yml
      shell: bash

    - name: List
      run: pwd
      shell: bash

    - name: Source build config environment variables
      uses: c-py/action-dotenv-to-setenv@v5
      with:
        env-file: ./.github/actions/.env

    - name: Log in to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ github.token }}

    - name: Generate OGC application package process CWL
      run: python3 ${{ github.action_path }}/generate_app_pack.py nasa/algorithm_config.yml process.cwl ${{ github.action_path }}/templates/process.cwl
      shell: bash
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}

    - name: Printenv
      run: printenv
      shell: bash

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: algorithm

    - name: Build and push algorithm Docker image
      id: push-algorithm
      uses: docker/build-push-action@v5
      with:
        context: .
        file: nasa/Dockerfile
        build-args: |
          BASE_IMAGE_NAME=${{ env.BASE_IMAGE_NAME }}
          REPO_NAME=${{ env.REPO_NAME }}
          BRANCH=${{ env.BRANCH }}
          REPO_URL_WITH_TOKEN=${{ env.REPO_URL_WITH_TOKEN }}
          BUILD_CMD=${{ env.BUILD_CMD }}
        push: true
        tags: ${{ env.REGISTRY }}/${{ env.ALGORITHM_NAME }}.${{ env.BRANCH }}:latest
        labels: ${{ steps.meta.outputs.labels }}
